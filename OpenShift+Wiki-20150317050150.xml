<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.6/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.6/ http://www.mediawiki.org/xml/export-0.6.xsd" version="0.6" xml:lang="en">
  <siteinfo>
    <sitename>OpenShift Wiki</sitename>
    <base>http://mediawiki-arao.itos.redhat.com/index.php/Main_Page</base>
    <generator>MediaWiki 1.19.15</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OpenShift Wiki</namespace>
      <namespace key="5" case="first-letter">OpenShift Wiki talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Admin Geo Replication</title>
    <ns>0</ns>
    <id>57</id>
      <sha1>j95bczs3ihs760l3u5v3u8h3cbc6tpi</sha1>
    <revision>
      <id>356</id>
      <timestamp>2015-02-26T09:41:20Z</timestamp>
      <contributor>
        <username>Schandra</username>
        <id>7</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="25645">{| class=&quot;wikitable&quot;
!'''''[[Gluster_File_System_Documentation | Home!!]]'''''
|}

= Managing Geo-replication =

Geo-replication provides a continuous, asynchronous, and incremental replication service from one site to another over Local Area Networks (LANs), Wide Area Network (WANs), and across the Internet.

Geo-replication uses a master–slave model, whereby replication and mirroring occurs between the following partners:

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;'''Master''' – a GlusterFS volume&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;'''Slave''' – a slave which can be of the following types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A local directory which can be represented as file URL like &lt;code&gt;file:///path/to/dir&lt;/code&gt;. You can use shortened form, for example, &lt;code&gt;/path/to/dir&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A GlusterFS Volume - Slave volume can be either a local volume like &lt;code&gt;gluster://localhost:volname&lt;/code&gt; (shortened form - &lt;code&gt;:volname&lt;/code&gt;) or a volume served by different host like &lt;code&gt;gluster://host:volname&lt;/code&gt; (shortened form - &lt;code&gt;host:volname&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;blockquote&gt;&lt;p&gt;'''Note'''&lt;/p&gt;
&lt;p&gt;Both of the above types can be accessed remotely using SSH tunnel. To use SSH, add an SSH prefix to either a file URL or gluster type URL. For example, &lt;code&gt;ssh://root@remote-host:/path/to/dir&lt;/code&gt; (shortened form - &lt;code&gt;root@remote-host:/path/to/dir&lt;/code&gt;) or &lt;code&gt;ssh://root@remote-host:gluster://localhost:volname&lt;/code&gt; (shortened from - &lt;code&gt;root@remote-host::volname&lt;/code&gt;).&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;

This section introduces Geo-replication, illustrates the various deployment scenarios, and explains how to configure the system to provide replication and mirroring in your environment.

== Replicated Volumes vs Geo-replication ==

The following table lists the difference between replicated volumes and geo-replication:

{|
!Replicated Volumes
!Geo-replication
|-
|Mirrors data across clusters
|Mirrors data across geographically distributed clusters
|-
|Provides high-availability
|Ensures backing up of data for disaster recovery
|-
|Synchronous replication (each and every file operation is sent across all the bricks)
|Asynchronous replication (checks for the changes in files periodically and syncs them on detecting differences)
|}

== Preparing to Deploy Geo-replication ==

This section provides an overview of the Geo-replication deployment scenarios, describes how you can check the minimum system requirements, and explores common deployment scenarios.

== Exploring Geo-replication Deployment Scenarios ==

Geo-replication provides an incremental replication service over Local Area Networks (LANs), Wide Area Network (WANs), and across the Internet. This section illustrates the most common deployment scenarios for Geo-replication, including the following:

* Geo-replication over LAN
* Geo-replication over WAN
* Geo-replication over the Internet
* Multi-site cascading Geo-replication

'''Geo-replication over LAN'''

You can configure Geo-replication to mirror data over a Local Area Network.

[[File:Geo-Rep_LAN.png]]

'''Geo-replication over WAN'''

You can configure Geo-replication to replicate data over a Wide Area Network.

[[File:Geo-Rep_WAN.png]]

'''Geo-replication over Internet'''

You can configure Geo-replication to mirror data over the Internet.

[[File:Geo-Rep03_Internet.png]]

'''Multi-site cascading Geo-replication'''

You can configure Geo-replication to mirror data in a cascading fashion across multiple sites.

[[File:Geo-Rep04_Cascading.png]]

== Geo-replication Deployment Overview ==

Deploying Geo-replication involves the following steps:

# Verify that your environment matches the minimum system requirement.
# Determine the appropriate deployment scenario.
# Start Geo-replication on master and slave systems, as required.

== Checking Geo-replication Minimum Requirements ==

Before deploying GlusterFS Geo-replication, verify that your systems match the minimum requirements.

The following table outlines the minimum requirements for both master and slave nodes within your environment:

{|
!Component
!Master
!Slave
|-
|Operating System
|GNU/Linux
|GNU/Linux
|-
|Filesystem
|GlusterFS 3.2 or higher
|GlusterFS 3.2 or higher (GlusterFS needs to be installed, but does not need to be running), ext3, ext4, or XFS (any other POSIX compliant file system would work, but has not been tested extensively)
|-
|Python
|Python 2.4 (with ctypes external module), or Python 2.5 (or higher)
|Python 2.4 (with ctypes external module), or Python 2.5 (or higher)
|-
|Secure shell
|OpenSSH version 4.0 (or higher)
|SSH2-compliant daemon
|-
|Remote synchronization
|rsync 3.0.7 or higher
|rsync 3.0.7 or higher
|-
|FUSE
|GlusterFS supported versions
|GlusterFS supported versions
|}

== Setting Up the Environment for Geo-replication ==

'''Time Synchronization'''

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On bricks of a geo-replication master volume, all the servers' time must be uniform. You are recommended to set up NTP (Network Time Protocol) service to keep the bricks sync in time and avoid out-of-time sync effect.&lt;/p&gt;
&lt;p&gt;For example: In a Replicated volume where brick1 of the master is at 12.20 hrs and brick 2 of the master is at 12.10 hrs with 10 minutes time lag, all the changes in brick2 between this period may go unnoticed during synchronization of files with Slave.&lt;/p&gt;
&lt;p&gt;For more information on setting up NTP, see [http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Migration_Planning_Guide/ch04s07.html ].&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

'''To setup Geo-replication for SSH'''

Password-less login has to be set up between the host machine (where geo-replication Start command will be issued) and the remote machine (where slave process should be launched through SSH).

&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;
&lt;li&gt;&lt;p&gt;On the node where geo-replication sessions are to be set up, run the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# ssh-keygen -f /var/lib/glusterd/geo-replication/secret.pem&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Press Enter twice to avoid passphrase.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the following command on master for all the slave hosts:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# ssh-copy-id -i /var/lib/glusterd/geo-replication/secret.pem.pub @&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

== Setting Up the Environment for a Secure Geo-replication Slave ==

You can configure a secure slave using SSH so that master is granted a restricted access. With GlusterFS, you need not specify configuration parameters regarding the slave on the master-side configuration. For example, the master does not require the location of the rsync program on slave but the slave must ensure that rsync is in the PATH of the user which the master connects using SSH. The only information that master and slave have to negotiate are the slave-side user account, slave's resources that master uses as slave resources, and the master's public key. Secure access to the slave can be established using the following options:

* Restricting Remote Command Execution
* Using &lt;code&gt;Mountbroker&lt;/code&gt; for Slaves
* Using IP based Access Control

'''Backward Compatibility'''

Your existing Ge-replication environment will work with GlusterFS, except for the following:

* The process of secure reconfiguration affects only the glusterfs instance on slave. The changes are transparent to master with the exception that you may have to change the SSH target to an unprivileged account on slave.
* The following are the some exceptions where this might not work:
** Geo-replication URLs which specify the slave resource when configuring master will include the following special characters: space, *, ?, [;
** Slave must have a running instance of glusterd, even if there is no gluster volume among the mounted slave resources (that is, file tree slaves are used exclusively) .

=== Restricting Remote Command Execution ===

If you restrict remote command execution, then the Slave audits commands coming from the master and the commands related to the given geo-replication session is allowed. The Slave also provides access only to the files within the slave resource which can be read or manipulated by the Master.

To restrict remote command execution:

&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;
&lt;li&gt;&lt;p&gt;Identify the location of the gsyncd helper utility on Slave. This utility is installed in &lt;code&gt;PREFIX/libexec/glusterfs/gsyncd&lt;/code&gt;, where PREFIX is a compile-time parameter of glusterfs. For example, &lt;code&gt;--prefix=PREFIX&lt;/code&gt; to the configure script with the following common values&lt;code&gt;/usr, /usr/local, and /opt/glusterfs/glusterfs_version&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensure that command invoked from master to slave passed through the slave's gsyncd utility.&lt;/p&gt;
&lt;p&gt;You can use either of the following two options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Set gsyncd with an absolute path as the shell for the account which the master connects through SSH. If you need to use a privileged account, then set it up by creating a new user with UID 0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup key authentication with command enforcement to gsyncd. You must prefix the copy of master's public key in the Slave account's &lt;code&gt;authorized_keys&lt;/code&gt; file with the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;command=&amp;lt;path to gsyncd&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;command=&amp;quot;PREFIX/glusterfs/gsyncd&amp;quot; ssh-rsa AAAAB3Nza....&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;/ol&gt;

=== Using Mountbroker for Slaves ===

&lt;code&gt;mountbroker&lt;/code&gt; is a new service of glusterd. This service allows an unprivileged process to own a GlusterFS mount by registering a label (and DSL (Domain-specific language) options ) with glusterd through a glusterd volfile. Using CLI, you can send a mount request to glusterd to receive an alias (symlink) of the mounted volume.

A request from the agent , the unprivileged slave agents use the mountbroker service of glusterd to set up an auxiliary gluster mount for the agent in a special environment which ensures that the agent is only allowed to access with special parameters that provide administrative level access to the particular volume.

'''To setup an auxiliary gluster mount for the agent''':

&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;
&lt;li&gt;&lt;p&gt;Create a new group. For example, &lt;code&gt;geogroup&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a unprivileged account. For example, &lt;code&gt;geoaccount&lt;/code&gt;. Make it a member of &lt;code&gt;geogroup&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new directory owned by root and with permissions ''0711.'' For example, create a create mountbroker-root directory &lt;code&gt;/var/mountbroker-root&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the following options to the glusterd volfile, assuming the name of the slave gluster volume as &lt;code&gt;slavevol&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;option mountbroker-root /var/mountbroker-root&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;option mountbroker-geo-replication.geoaccount slavevol&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;option geo-replication-log-group geogroup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you are unable to locate the glusterd volfile at &lt;code&gt;/etc/glusterfs/glusterd.vol&lt;/code&gt;, you can create a volfile containing both the default configuration and the above options and place it at &lt;code&gt;/etc/glusterfs/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A sample glusterd volfile along with default options:&lt;/p&gt;
&lt;pre&gt;volume management
    type mgmt/glusterd
    option working-directory /var/lib/glusterd
    option transport-type socket,rdma
    option transport.socket.keepalive-time 10
    option transport.socket.keepalive-interval 2
    option transport.socket.read-fail-log off

    option mountbroker-root /var/mountbroker-root 
    option mountbroker-geo-replication.geoaccount slavevol
    option geo-replication-log-group geogroup
end-volume&lt;/pre&gt;
&lt;p&gt;If you host multiple slave volumes on Slave, you can repeat step 2. for each of them and add the following options to the &lt;code&gt;volfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;option mountbroker-geo-replication.geoaccount2 slavevol2
option mountbroker-geo-replication.geoaccount3 slavevol3&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup Master to access Slave as &lt;code&gt;geoaccount@Slave&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can add multiple slave volumes within the same account (geoaccount) by providing comma-separated list (without spaces) as the argument of &lt;code&gt;mountbroker-geo-replication.geogroup&lt;/code&gt;. You can also have multiple options of the form &lt;code&gt;mountbroker-geo-replication.*&lt;/code&gt;. It is recommended to use one service account per Master machine. For example, if there are multiple slave volumes on Slave for the master machines Master1, Master2, and Master3, then create a dedicated service user on Slave for them by repeating Step 2. for each (like geogroup1, geogroup2, and geogroup3), and then add the following corresponding options to the volfile:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;option mountbroker-geo-replication.geoaccount1 slavevol11,slavevol12,slavevol13&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;option mountbroker-geo-replication.geoaccount2 slavevol21,slavevol22&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;option mountbroker-geo-replication.geoaccount3 slavevol31&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now set up Master1 to ssh to geoaccount1@Slave, etc.&lt;/p&gt;
&lt;p&gt;You must restart glusterd after making changes in the configuration to effect the updates.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

=== Using IP based Access Control ===

You can use IP based access control method to provide access control for the slave resources using IP address. You can use method for both Slave and file tree slaves, but in the section, we are focusing on file tree slaves using this method.

To set access control based on IP address for file tree slaves:

&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;
&lt;li&gt;&lt;p&gt;Set a general restriction for accessibility of file tree resources:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication '/*' config allow-network ::1,127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will refuse all requests for spawning slave agents except for requests initiated locally.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you want the to lease file tree at &lt;code&gt;/data/slave-tree&lt;/code&gt; to Master, enter the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replicationconfig allow-network&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MasterIP&lt;/code&gt; is the IP address of Master. The slave agent spawn request from master will be accepted if it is executed at &lt;code&gt;/data/slave-tree&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

If the Master side network configuration does not enable the Slave to recognize the exact IP address of Master, you can use CIDR notation to specify a subnet instead of a single IP address as MasterIP or even comma-separated lists of CIDR subnets.

If you want to extend IP based access control to gluster slaves, use the following command:

&lt;code&gt;# gluster volume geo-replication '*' config allow-network ::1,127.0.0.1&lt;/code&gt;

== Starting Geo-replication ==

This section describes how to configure and start Gluster Geo-replication in your storage environment, and verify that it is functioning correctly.

=== Starting Geo-replication ===

To start Gluster Geo-replication

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start geo-replication between the hosts using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir start
Starting geo-replication session between Volume1
example.com:/data/remote_dir has been successful&lt;/pre&gt;
&lt;blockquote&gt;&lt;p&gt;'''Note'''&lt;/p&gt;
&lt;p&gt;You may need to configure the service before starting Gluster Geo-replication.&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;

=== Verifying Successful Deployment ===

You can use the gluster command to verify the status of Gluster Geo-replication in your environment.

'''To verify the status Gluster Geo-replication'''

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Verify the status by issuing the following command on host:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir status&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir status

MASTER    SLAVE                            STATUS
______    ______________________________   ____________
Volume1 root@example.com:/data/remote_dir  Starting....&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;

=== Displaying Geo-replication Status Information ===

You can display status information about a specific geo-replication master session, or a particular master-slave session, or all geo-replication sessions, as needed.

'''To display geo-replication status information'''

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Display information of all geo-replication sessions using the following command:&lt;/p&gt;
&lt;pre&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir status

MASTER    SLAVE                            STATUS
______    ______________________________   ____________
Volume1 root@example.com:/data/remote_dir  Starting....&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Display information of a particular master slave session using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example, to display information of Volume1 and example.com:/data/remote_dir&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The status of the geo-replication between Volume1 and example.com:/data/remote_dir is displayed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Display information of all geo-replication sessions belonging to a master&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication MASTER status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example, to display information of Volume1&lt;/p&gt;
&lt;pre&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir status

MASTER    SLAVE                            STATUS
______    ______________________________   ____________
Volume1 ssh://example.com:gluster://127.0.0.1:remove_volume  OK

Volume1 ssh://example.com:file:///data/remote_dir  OK&lt;/pre&gt;
&lt;p&gt;The status of a session could be one of the following four:&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;'''Starting''': This is the initial phase of the Geo-replication session; it remains in this state for a minute, to make sure no abnormalities are present.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;'''OK''': The geo-replication session is in a stable state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;'''Faulty''': The geo-replication session has witnessed some abnormality and the situation has to be investigated further.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;'''Corrupt''': The monitor thread which is monitoring the geo-replication session has died. This situation should not occur normally.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

== Configuring Geo-replication ==

To configure Gluster Geo-replication

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use the following command at the Gluster command line:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  config [options]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;To view list of all option/value pair, use the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir config&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

== Stopping Geo-replication ==

You can use the gluster command to stop Gluster Geo-replication (syncing of data from Master to Slave) in your environment.

'''To stop Gluster Geo-replication'''

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Stop geo-replication between the hosts using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  stop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;# gluster volume geo-replication Volume1 example.com:/data/remote_dir stop
Stopping geo-replication session between Volume1 and
example.com:/data/remote_dir has been successful&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;

== Restoring Data from the Slave ==

You can restore data from the slave to the master volume, whenever the master volume becomes faulty for reasons like hardware failure.

The example in this section assumes that you are using the Master Volume (Volume1) with the following configuration:

&lt;pre&gt;machine1# gluster volume info
Type: Distribute
Status: Started
Number of Bricks: 2
Transport-type: tcp
Bricks:
Brick1: machine1:/export/dir16
Brick2: machine2:/export/dir16
Options Reconfigured:
geo-replication.indexing: on&lt;/pre&gt;
The data is syncing from master volume (Volume1) to slave directory (example.com:/data/remote_dir). To view the status of this geo-replication session run the following command on Master:

&lt;pre&gt;# gluster volume geo-replication Volume1 root@example.com:/data/remote_dir status

MASTER    SLAVE                             STATUS
______    ______________________________    ____________
Volume1  root@example.com:/data/remote_dir   OK&lt;/pre&gt;
'''Before Failure'''

Assume that the Master volume had 100 files and was mounted at /mnt/gluster on one of the client machines (client). Run the following command on Client machine to view the list of files:

&lt;pre&gt;client# ls /mnt/gluster | wc –l
100&lt;/pre&gt;
The slave directory (example.com) will have same data as in the master volume and same can be viewed by running the following command on slave:

&lt;pre&gt;example.com# ls /data/remote_dir/ | wc –l
100&lt;/pre&gt;
'''After Failure'''

If one of the bricks (machine2) fails, then the status of Geo-replication session is changed from &amp;quot;OK&amp;quot; to &amp;quot;Faulty&amp;quot;. To view the status of this geo-replication session run the following command on Master:

&lt;pre&gt;# gluster volume geo-replication Volume1 root@example.com:/data/remote_dir status

MASTER    SLAVE                              STATUS
______    ______________________________     ____________
Volume1   root@example.com:/data/remote_dir  Faulty&lt;/pre&gt;
Machine2 is failed and now you can see discrepancy in number of files between master and slave. Few files will be missing from the master volume but they will be available only on slave as shown below.

Run the following command on Client:

&lt;pre&gt;client # ls /mnt/gluster | wc –l
52&lt;/pre&gt;
Run the following command on slave (example.com):

&lt;pre&gt;Example.com# # ls /data/remote_dir/ | wc –l
100&lt;/pre&gt;
'''To restore data from the slave machine'''

&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;
&lt;li&gt;&lt;p&gt;Stop all Master's geo-replication sessions using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  stop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;machine1# gluster volume geo-replication Volume1
example.com:/data/remote_dir stop

Stopping geo-replication session between Volume1 &amp;amp;
example.com:/data/remote_dir has been successful&lt;/pre&gt;
&lt;blockquote&gt;&lt;p&gt;'''Note'''&lt;/p&gt;
&lt;p&gt;Repeat &lt;code&gt;# gluster volume geo-replication  stop&lt;/code&gt;command on all active geo-replication sessions of master volume.&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replace the faulty brick in the master by using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume replace-brick  start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;machine1# gluster volume replace-brick Volume1 machine2:/export/dir16 machine3:/export/dir16 start
Replace-brick started successfully&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Commit the migration of data using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume replace-brick  commit force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;machine1# gluster volume replace-brick Volume1 machine2:/export/dir16 machine3:/export/dir16 commit force
Replace-brick commit successful&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verify the migration of brick by viewing the volume info using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;machine1# gluster volume info
Volume Name: Volume1
Type: Distribute
Status: Started
Number of Bricks: 2
Transport-type: tcp
Bricks:
Brick1: machine1:/export/dir16
Brick2: machine3:/export/dir16
Options Reconfigured:
geo-replication.indexing: on&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run rsync command manually to sync data from slave to master volume's client (mount point).&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;example.com# rsync -PavhS --xattrs --ignore-existing /data/remote_dir/ client:/mnt/gluster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Verify that the data is synced by using the following command:&lt;/p&gt;
&lt;p&gt;On master volume, run the following command:&lt;/p&gt;
&lt;pre&gt;Client # ls | wc –l
100&lt;/pre&gt;
&lt;p&gt;On the Slave run the following command:&lt;/p&gt;
&lt;pre&gt;example.com# ls /data/remote_dir/ | wc –l
100&lt;/pre&gt;
&lt;p&gt;Now Master volume and Slave directory is synced.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart geo-replication session from master to slave using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;machine1# gluster volume geo-replication Volume1
example.com:/data/remote_dir start
Starting geo-replication session between Volume1 &amp;amp;
example.com:/data/remote_dir has been successful&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;

== Best Practices ==

'''Manually Setting Time'''

If you have to change the time on your bricks manually, then you must set uniform time on all bricks. Setting time backward corrupts the geo-replication index, so the recommended way to set the time manually is:

&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;
&lt;li&gt;&lt;p&gt;Stop geo-replication between the master and slave using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication  sto&lt;/code&gt;p&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stop the geo-replication indexing using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume set  geo-replication.indexing of&lt;/code&gt;f&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set uniform time on all bricks.s&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart your geo-replication sessions by using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume geo-replication start&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

'''Running Geo-replication commands in one system'''

It is advisable to run the geo-replication commands in one of the bricks in the trusted storage pool. This is because, the log files for the geo-replication session would be stored in the *Server* where the Geo-replication start is initiated. Hence it would be easier to locate the log-files when required.

'''Isolation'''

Geo-replication slave operation is not sandboxed as of now and is ran as a privileged service. So for the security reason, it is advised to create a sandbox environment (dedicated machine / dedicated virtual machine / chroot/container type solution) by the administrator to run the geo-replication slave in it. Enhancement in this regard will be available in follow-up minor release.

&lt;br /&gt;&lt;br /&gt;
{| class=&quot;wikitable&quot;
!'''''[[Gluster_File_System_Documentation | Home!!]]'''''
|}</text>
    </revision>
  </page>
</mediawiki>
