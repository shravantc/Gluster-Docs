<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.6/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.6/ http://www.mediawiki.org/xml/export-0.6.xsd" version="0.6" xml:lang="en">
  <siteinfo>
    <sitename>OpenShift Wiki</sitename>
    <base>http://mediawiki-arao.itos.redhat.com/index.php/Main_Page</base>
    <generator>MediaWiki 1.19.15</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OpenShift Wiki</namespace>
      <namespace key="5" case="first-letter">OpenShift Wiki talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Glossary</title>
    <ns>0</ns>
    <id>72</id>
      <sha1>ks2xnbbhicmewhphrtt7u3yc7a5vff8</sha1>
    <revision>
      <id>353</id>
      <timestamp>2015-02-26T09:27:32Z</timestamp>
      <contributor>
        <username>Schandra</username>
        <id>7</id>
      </contributor>
      <comment>Created page with &quot;{| class=&quot;wikitable&quot; !'''''[[Gluster_File_System_Documentation | Home!!]]''''' |}  = Glossary =  &lt;dl&gt; &lt;dt&gt;'''Brick'''&lt;/dt&gt; &lt;dd&gt;&lt;p&gt;A Brick is the basic unit of storage in Glust...&quot;</comment>
      <text xml:space="preserve" bytes="13650">{| class=&quot;wikitable&quot;
!'''''[[Gluster_File_System_Documentation | Home!!]]'''''
|}

= Glossary =

&lt;dl&gt;
&lt;dt&gt;'''Brick'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A Brick is the basic unit of storage in GlusterFS, represented by an export directory on a server in the trusted storage pool. A brick is expressed by combining a server with an export directory in the following format:&lt;/p&gt;
&lt;pre&gt;`SERVER:EXPORT`&lt;/pre&gt;
&lt;p&gt;For example: &lt;code&gt;myhostname:/exports/myexportdir/&lt;/code&gt;&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Volume'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A volume is a logical collection of bricks. Most of the gluster management operations happen on the volume.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Subvolume'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A brick after being processed by at least one translator or in other words set of one or more xlator stacked together is called a sub-volume.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Volfile'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Volume (vol) files are configuration files that determine the behavior of the GlusterFs trusted storage pool. Volume file is a textual representation of a collection of modules (also known as translators) that together implement the various functions required. The collection of modules are arranged in a graph-like fashion. E.g, A replicated volume's volfile, among other things, would have a section describing the replication translator and its tunables. This section describes how the volume would replicate data written to it. Further, a client process that serves a mount point, would interpret its volfile and load the translators described in it. While serving I/O, it would pass the request to the collection of modules in the order specified in the volfile.&lt;/p&gt;
&lt;p&gt;At a high level, GlusterFs has three entities,that is, Server, Client and Management daemon. Each of these entities have their own volume files. Volume files for servers and clients are generated by the management daemon after the volume is created.&lt;/p&gt;
&lt;p&gt;Server and Client Vol files are located in /var/lib/glusterd/vols/VOLNAME directory. The management daemon vol file is named as glusterd.vol and is located in /etc/glusterfs/ directory.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''glusterd'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The daemon/service that manages volumes and cluster membership. It is required to run on all the servers in the trusted storage pool.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Cluster'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A trusted pool of linked computers working together, resembling a single computing resource. In GlusterFs, a cluster is also referred to as a trusted storage pool.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Client'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Any machine that mounts a GlusterFS volume. Any applications that use libgfapi access mechanism can also be treated as clients in GlusterFS context.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Server'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The machine (virtual or bare metal) that hosts the bricks in which data is stored.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Block Storage'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Block special files, or block devices, correspond to devices through which the system moves data in the form of blocks. These device nodes often represent addressable devices such as hard disks, CD-ROM drives, or memory regions. GlusterFS requires a filesystem (like XFS) that supports extended attributes.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Filesystem'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A method of storing and organizing computer files and their data. Essentially, it organizes these files into a database for the storage, organization, manipulation, and retrieval by the computer's operating system.&lt;/p&gt;
&lt;p&gt;Source: [http://en.wikipedia.org/wiki/Filesystem Wikipedia]&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Distributed File System'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A file system that allows multiple clients to concurrently access data which is spread across servers/bricks in a trusted storage pool. Data sharing among multiple locations is fundamental to all distributed file systems.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;

**Virtual File System (VFS) VFS is a kernel software layer which handles all system calls related to the standard Linux file system. It provides a common interface to several kinds of file systems.

&lt;dl&gt;
&lt;dt&gt;'''POSIX'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Portable Operating System Interface (for Unix) is the name of a family of related standards specified by the IEEE to define the application programming interface (API), along with shell and utilities interfaces for software compatible with variants of the Unix operating system. Gluster exports a fully POSIX compliant file system.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Extended Attributes'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Extended file attributes (abbreviated xattr) is a filesystem feature that enables users/programs to associate files/dirs with metadata.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''FUSE'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Filesystem in Userspace (FUSE) is a loadable kernel module for Unix-like computer operating systems that lets non-privileged users create their own filesystems without editing kernel code. This is achieved by running filesystem code in user space while the FUSE module provides only a &amp;quot;bridge&amp;quot; to the actual kernel interfaces.&lt;/p&gt;
&lt;p&gt;Source: [http://en.wikipedia.org/wiki/Filesystem_in_Userspace Wikipedia]&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''GFID'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Each file/directory on a GlusterFS volume has a unique 128-bit number associated with it called the GFID. This is analogous to inode in a regular filesystem.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;

'''Infiniband''' InfiniBand is a switched fabric computer network communications link used in high-performance computing and enterprise data centers.

&lt;dl&gt;
&lt;dt&gt;'''Metadata'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Metadata is data providing information about one or more other pieces of data.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Namespace'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Namespace is an abstract container or environment created to hold a logical grouping of unique identifiers or symbols. Each Gluster volume exposes a single namespace as a POSIX mount point that contains every file in the cluster.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Node'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A server or computer that hosts one or more bricks.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Open Source'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Open source describes practices in production and development that promote access to the end product's source materials. Some consider open source a philosophy, others consider it a pragmatic methodology.&lt;/p&gt;
&lt;p&gt;Before the term open source became widely adopted, developers and producers used a variety of phrases to describe the concept; open source gained hold with the rise of the Internet, and the attendant need for massive retooling of the computing source code.&lt;/p&gt;
&lt;p&gt;Opening the source code enabled a self-enhancing diversity of production models, communication paths, and interactive communities. Subsequently, a new, three-word phrase &amp;quot;open source software&amp;quot; was born to describe the environment that the new copyright, licensing, domain, and consumer issues created.&lt;/p&gt;
&lt;p&gt;Source: [http://en.wikipedia.org/wiki/Open_source Wikipedia]&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Petabyte'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A petabyte (derived from the SI prefix peta- ) is a unit of information equal to one quadrillion (short scale) bytes, or 1000 terabytes. The unit symbol for the petabyte is PB. The prefix peta- (P) indicates a power of 1000:&lt;/p&gt;
&lt;p&gt;1 PB = 1,000,000,000,000,000 B = 10005 B = 1015 B.&lt;/p&gt;
&lt;p&gt;The term &amp;quot;pebibyte&amp;quot; (PiB), using a binary prefix, is used for the corresponding power of 1024.&lt;/p&gt;
&lt;p&gt;Source: [http://en.wikipedia.org/wiki/Petabyte Wikipedia]&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Quorum'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The configuration of quorum in a trusted storage pool determines the number of server failures that the trusted storage pool can sustain. If an additional failure occurs, the trusted storage pool becomes unavailable.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Quota'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Quota allows you to set limits on usage of disk space by directories or by volumes.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''RAID'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Redundant Array of Inexpensive Disks (RAID) is a technology that provides increased storage reliability through redundancy, combining multiple low-cost, less-reliable disk drives components into a logical unit where all drives in the array are interdependent.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''RDMA'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Remote direct memory access (RDMA) is a direct memory access from the memory of one computer into that of another without involving either one's operating system. This permits high-throughput, low-latency networking, which is especially useful in massively parallel computer clusters.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Rebalance'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A process of fixing layout and resdistributing data in a volume when a brick is added or removed.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''RRDNS'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Round Robin Domain Name Service (RRDNS) is a method to distribute load across application servers. RRDNS is implemented by creating multiple A records with the same name and different IP addresses in the zone file of a DNS server.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Samba'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Samba allows file and print sharing between computers running Windows and computers running Linux. It is an implementation of several services and protocols including SMB and CIFS.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Self-Heal'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The self-heal daemon that runs in the background, identifies inconsistencies in files/dirs in a replicated volume and then resolves or heals them. This healing process is usually required when one or more bricks of a volume goes down and then comes up later.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Split-brain'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;This is a situation where data on two or more bricks in a replicated volume start to diverge in terms of content or metadata. In this state, one cannot determine programitically which set of data is &amp;quot;right&amp;quot; and which is &amp;quot;wrong&amp;quot;.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Translator'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Translators (also called xlators) are stackable modules where each module has a very specific purpose. Translators are stacked in a hierarchical structure called as graph. A translator receives data from its parent translator, performs necessary operations and then passes the data down to its child translator in hierarchy.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Trusted Storage Pool'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A storage pool is a trusted network of storage servers. When you start the first server, the storage pool consists of that server alone.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Scale-Up Storage'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Increases the capacity of the storage device in a single dimension. For example, adding additional disk capacity to an existing trusted storage pool.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;

'''Scale-Out Storage''' Scale out systems are designed to scale on both capacity and performance. It increases the capability of a storage device in single dimension. For example, adding more systems of the same size, or adding servers to a trusted storage pool that increases CPU, disk capacity, and throughput for the trusted storage pool.

; '''Userspace'''
: Applications running in user space don’t directly interact with hardware, instead using the kernel to moderate access. Userspace applications are generally more portable than applications in kernel space. Gluster is a user space application.
; '''Geo-Replication'''
: Geo-replication provides a continuous, asynchronous, and incremental replication service from site to another over Local Area Networks (LAN), Wide Area Network (WAN), and across the Internet.
; '''N-way Replication'''
: Local synchronous data replication which is typically deployed across campus or Amazon Web Services Availability Zones.

'''Distributed Hash Table Terminology''' '''Hashed subvolume''' : A Distributed Hash Table Translator subvolume to which the file or directory name is hashed to.

&lt;dl&gt;
&lt;dt&gt;'''Cached subvolume'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A Distributed Hash Table Translator subvolume where the file content is actually present. For directories, the concept of cached-subvolume is not relevant. It is loosely used to mean subvolumes which are not hashed-subvolume.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Linkto-file'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;For a newly created file, the hashed and cached subvolumes are the same. When directory entry operations like rename (which can change the name and hence hashed subvolume of the file) are performed on the file, instead of moving the entire data in the file to a new hashed subvolume, a file is created with the same name on the newly hashed subvolume. The purpose of this file is only to act as a pointer to the node where the data is present. In the extended attributes of this file, the name of the cached subvolume is stored. This file on the newly hashed-subvolume is called a linkto-file. The linkto file is relevant only for non-directory entities.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Directory Layout'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The directory layout specifies the hash-ranges of the subdirectories of a directory to which subvolumes they correspond to.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Properties of directory layouts:'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The layouts are created at the time of directory creation and are persisted as extended attributes of the directory. A subvolume is not included in the layout if it remained offline at the time of directory creation and no directory entries ( such as files and directories) of that directory are created on that subvolume. The subvolume is not part of the layout until the fix-layout is complete as part of running the rebalance command. If a subvolume is down during access (after directory creation), access to any files that hash to that subvolume fails.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;'''Fix Layout'''&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;A command that is executed during the rebalance process. The rebalance process itself comprises of two stages: Fixes the layouts of directories to accommodate any subvolumes that are added or removed. It also heals the directories, checks whether the layout is non-contiguous, and persists the layout in extended attributes, if needed. It also ensures that the directories have the same attributes across all the subvolumes.&lt;/p&gt;
&lt;p&gt;Migrates the data from the cached-subvolume to the hashed-subvolume.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;

&lt;br /&gt;
&lt;br /&gt;
{| class=&quot;wikitable&quot;
!'''''[[Gluster_File_System_Documentation | Home!!]]'''''
|}</text>
    </revision>
  </page>
</mediawiki>
